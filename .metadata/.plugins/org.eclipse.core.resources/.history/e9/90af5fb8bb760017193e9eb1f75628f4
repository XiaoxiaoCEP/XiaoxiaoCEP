package com.xiaoxiaopm.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Repository;

import com.xiaoxiaopm.model.Workflow;

@Repository
public class WorkflowDAOImpl implements WorkflowDAO {
    
    private static final Logger logger = LoggerFactory.getLogger(WorkflowDAOImpl.class);
    
    private SessionFactory sessionFactory;
    
    @SuppressWarnings("unused")
    private void setSessionFactory(SessionFactory sessionFactory) {
        this.sessionFactory = sessionFactory;
    }

    @Override
    public void addWorkflow(Workflow workflow) {
        Session session = this.sessionFactory.getCurrentSession();
        Transaction tx = session.beginTransaction();
        session.persist(workflow);
        tx.commit();
        session.close();
        
        //Logging
        logger.info("Workflow is saved successfully, " + workflow.toString());
    }

    @Override
    @SuppressWarnings("unchecked")
    public List<Workflow> listWorkflows() {
        Session session = this.sessionFactory.getCurrentSession();
        List<Workflow> personList = session.createQuery("from Person").list();
        session.close();
        return personList;
    }

    @Override
    public void updateWorkflow(Workflow workflow) {
        //
        Session session = this.sessionFactory.getCurrentSession();
        Transaction tx = session.beginTransaction();
        session.update(arg0);(workflow);
        tx.commit();
        session.close();
    }

    @Override
    public Workflow getWorkflowById(String workflowID) {
        // TODO Auto-generated method stub
        return null;
    }

    @Override
    public void removeWorkflow(String workflowID) {
        // TODO Auto-generated method stub
        
    }

}
